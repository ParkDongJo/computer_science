// https://school.programmers.co.kr/learn/courses/30/lessons/12941

/*
이미지에는 두 개의 배열 A와 B를 사용하는 문제가 설명되어 있습니다. 각 배열은 자연수로 이루어져 있으며, 배열 A와 B에서 각각 하나의 숫자를 선택하여 곱하는 과정을 배열의 길이만큼 반복하고, 그 결과를 누적하여 더하는 문제입니다. 이때 최종적으로 나온 누적 합을 최소화하기 위해서는, 한 배열에서는 최대값을, 다른 배열에서는 최소값을 선택하여 곱해야 합니다.

예시로 주어진 배열 A = [1, 4, 2], B = [5, 4, 4]에서는 다음과 같이 계산합니다:

- A에서 최소값인 1과 B에서 최대값인 5를 곱하여 더합니다. (1x5 = 5)
- A에서 다음으로 작은 값인 2와 B에서 다음으로 큰 값인 4를 곱하여 더합니다. (2x4 = 8, 누적 합은 5 + 8 = 13)
- A에서 남은 값인 4와 B에서 남은 값인 4를 곱하여 더합니다. (4x4 = 16, 누적 합은 13 + 16 = 29)

최종적으로 이 문제의 솔루션은 29를 반환해야 합니다.

문제의 제한사항은 다음과 같습니다:

- 배열 A, B의 길이: 1,000 이하의 자연수
- 배열 A, B의 원소의 크기: 1,000 이하의 자연수

이 문제를 해결하기 위한 JavaScript 코드를 작성해야 합니다.
*/
function solution(A, B) {
  var answer = 0;
  A.sort((a, b) => a - b);
  B.sort((a, b) => b - a);

  for (let i = 0; i < A.length; i++) {
    answer += A[i] * B[i];
  }

  return answer;
}

// solution 의 결과값은 각각
// 29
// 10
// 이 나와야 한다.
console.log(solution([1, 4, 2], [5, 4, 4]));
console.log(solution([1, 2], [3, 4]));
